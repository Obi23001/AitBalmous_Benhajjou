package pk1;
public class Cercle extends Shape implements Cloneable,Comparable<Cercle>{
	/**
	 * Declaration des attributs
	 */
	private double rayon;
	/**
	 * Constructeur avec parametre
	 * @param couleur du cercle
	 * @param rayon du cercle
	 */
	public Cercle(String couleur,double rayon) {
		super(couleur);
		this.rayon=rayon;
	}
	/**
	 * Redefinition de toString
	 */
	@Override
	public String toString() {
		return super.toString()+"Rayon : " + rayon;
	}
	/**
	 * Redefinition de clone
	 */
	@Override
	public Object clone() throws CloneNotSupportedException {
		Object cercle;
		try
	    {
	        cercle = (Object) super.clone();
	    }
	    catch (CloneNotSupportedException e)
	    {
	        throw new Error();
	    }
		return cercle;
	}
	/**
	 * Redefinition de equals
	 */
	@Override
	public boolean equals(Object obj) {
		//si l'objet est lui meme
		if (obj == this) {
            return true;
        }
		//si l'objet n'est pas une instance du Cercle
		if (!(obj instanceof Cercle)) {
	        return false;
	    }
		Cercle autreCercle = (Cercle) obj;
		return autreCercle.rayon == this.rayon && autreCercle.getCouleur().equals(this.getCouleur());
	}
	@Override
	public int compareTo(Cercle o) {
		if (this.rayon < o.rayon) {
            return -1;
        } else if (this.rayon > o.rayon) {
            return 1;
        } else {
            return 0;
        }
	}
	
	
	
}
